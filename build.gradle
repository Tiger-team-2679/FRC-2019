plugins {
    id "java"
    id "edu.wpi.first.GradleRIO" version "2019.1.1"
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io"}
    maven {     url "http://devsite.ctr-electronics.com/maven/release/"}
}

ext.PhoenixVersion = "5.12.1"

deploy {
    targets {
        roboRIO("roborio") {
            team = frc.getTeamOrDefault(2679)
        }
    }
    artifacts {
        frcJavaArtifact('frcJava') {
            targets << "roborio"
            debug = frc.getDebugOrDefault(false)
        }
    }
}

repositories { mavenCentral() }

configurations { sshAntTask }

dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)
    compile "com.ctre.phoenix:api-java:${PhoenixVersion}"
    compile "com.ctre.phoenix:wpiapi-java:${PhoenixVersion}"
    nativeZip "com.ctre.phoenix:cci:${PhoenixVersion}:linuxathena@zip"
    compile 'com.github.Tiger-team-2679:Tiger-Eye:13.01.2019'
	sshAntTask 'org.apache.ant:ant-jsch:1.9.2'
}

def robotManifest = {
    attributes 'Main-Class': 'org.team2679.TigerEye.core.Bootstrap'
}

jar.doFirst {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest robotManifest
}

task deployJetson() {
    def host = 'tegra-ubuntu.local'
	def user = 'nvidia'
	def password = 'nvidia'
	def workdir = '/home/nvidia/Desktop/frc/vision'
	def output = 'JetsonDeployOutput.txt'
	
	ant.taskdef(
		name: 'scp',
		classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
		classpath: configurations.sshAntTask.asPath)
		
	ant.taskdef(
        name: 'ssh',
        classname: 'org.apache.tools.ant.taskdefs.optional.ssh.SSHExec',
        classpath: configurations.sshAntTask.asPath)

	ant.ssh(
		host: host,
		username: user,
		password: password,
		trust: true,
		verbose: true,
		output: output,
		command: "rm ${workdir} -r -f && mkdir ${workdir}"
    )
	
	ant.scp(remoteTodir: "${user}:${password}@${host}:${workdir}",
			trust: true,
			verbose: true,
			failonerror: true) {
		fileset(dir: 'vision') {
			include(name: '**/**')
		}
	}
	
	ant.ssh(
		host: host,
		username: user,
		password: password,
		trust: true,
		verbose: true,
		output: output,
		command: "cd ${workdir} && mkdir build && cd build && cmake ../ && make"
    )

}